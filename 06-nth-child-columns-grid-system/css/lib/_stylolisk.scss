// VARIABLES
// --------------------------------------------------------------------------------

// regular padding
$defaultPadding: 15px;

// Breakpoints
$screen-xs-min:  480px;
$screen-sm-min:  768px;
$screen-md-min:  992px;
$screen-lg-min: 1200px;

// BELOW: only processing
// --------------------------------------------------------------------------------

// Mobile - Desktop Breakpoint
$screen-desktop-min: $screen-md-min;
// Mobile - Container goes 100% width
$container-dissolve-max: ($screen-desktop-min - 1);

// mediaquery max helper value
$screen-xxs-max:             ($screen-xs-min - 1);
$screen-xs-max:              ($screen-sm-min - 1);
$screen-sm-max:              ($screen-md-min - 1);
$screen-md-max:              ($screen-lg-min - 1);
$screen-mobile-max:          ($screen-desktop-min - 1);

// Container sizes
$containerSidePadding: 30px;
$container-sm: $screen-sm-min - $containerSidePadding;
$container-md: $screen-md-min - $containerSidePadding;
$container-lg: $screen-lg-min - $containerSidePadding;

// ------------------------------------------------------------------------------
// ABSTRACT HELPER CLASSES
// -------------------------------------------------------------

%clearfix{
    &:before,
    &:after{
        content: "";
        display: table;
    }
    &:after{
        clear: both;
    }
}
%img-responsive{
    max-width: 100%;
    height: auto;
    display: block;
    vertical-align: middle;
}
%indented{
    margin-left: $defaultPadding;
    margin-right: $defaultPadding;
}
%padded{
    padding-left: $defaultPadding;
    padding-right: $defaultPadding;
}
%unpadded{
    padding-left: 0;
    padding-right: 0;
}
%flex-center{
    display: flex;
    flex-direction: column;
    justify-content: center;
}
%list-unstyled{
    list-style: none;
    margin: 0;
    padding: 0;
}
%center-block{
    margin-left: auto;
    margin-right: auto;
}


// -------------------------------------------------------
// ABSTRACE GRID CLASSES
// -------------------------------------------------------

// GRID CLASSES
%container-fluid{
    @extend %clearfix;
}
%container{
    margin-right: auto;
    margin-left: auto;
    @media  (min-width: $screen-sm-min)    { width: $container-sm; }
    @media  (min-width: $screen-md-min)    { width: $container-md; }
    @media  (min-width: $screen-lg-min)    { width: $container-lg; }
    @extend %clearfix;
}
%row{
    margin-left: -$defaultPadding;
    margin-right: -$defaultPadding;
    @extend %clearfix;
}

// RESPONSIVE
// ------------------------------------------------------------------------------

// MEDIA QUERIES
@mixin responsive-desktop{  @media screen and (min-width: #{$screen-desktop-min})                               { @content }}
@mixin responsive-mobile{   @media screen and (max-width: #{$screen-mobile-max})                                { @content }}
@mixin responsive-lg{       @media screen and (min-width: #{$screen-lg-min})                                    { @content }}
@mixin responsive-md{       @media screen and (min-width: #{$screen-md-min}) and (max-width: #{$screen-md-max}) { @content }}
@mixin responsive-sm{       @media screen and (min-width: #{$screen-sm-min}) and (max-width: #{$screen-sm-max}) { @content }}
@mixin responsive-xs{       @media screen and (min-width: #{$screen-xs-min}) and (max-width: #{$screen-xs-max}) { @content }}
@mixin responsive-xxs{      @media screen and (max-width: #{$screen-xxs-max})                                   { @content }}




// GRID COL SYSTEM ABSTRACT
%col-abstract{
    position: relative;
    float: left;
    min-height: 1px;
}

// SIMPLE "COL"
@mixin col     ($width)  { @extend %col-abstract;   @include responsive-desktop() { width: $width * 100% }}
@mixin col-lg  ($width)  { @extend %col-abstract;   @include responsive-lg()      { width: $width * 100% }}
@mixin col-md  ($width)  { @extend %col-abstract;   @include responsive-md()      { width: $width * 100% }}
@mixin col-sm  ($width)  { @extend %col-abstract;   @include responsive-sm()      { width: $width * 100% }}
@mixin col-xs  ($width)  { @extend %col-abstract;   @include responsive-xs()      { width: $width * 100% }}
@mixin col-xxs ($width)  { @extend %col-abstract;   @include responsive-xxs()     { width: $width * 100% }}

// GRID HIDERS
%hidden-desktop { @include responsive-desktop   (){ display: none; }}
%hidden-mobile  { @include responsive-mobile    (){ display: none; }}
%hidden-lg      { @include responsive-lg        (){ display: none; }}
%hidden-md      { @include responsive-md        (){ display: none; }}
%hidden-sm      { @include responsive-sm        (){ display: none; }}
%hidden-xs      { @include responsive-xs        (){ display: none; }}
%hidden-xxs     { @include responsive-xxs       (){ display: none; }}

// GRID VISIBLERS
%visible-desktop { display: none; @include responsive-desktop { display: block; }}
%visible-mobile  { display: none; @include responsive-mobile  { display: block; }}
%visible-lg      { display: none; @include responsive-lg      { display: block; }}
%visible-md      { display: none; @include responsive-md      { display: block; }}
%visible-sm      { display: none; @include responsive-sm      { display: block; }}
%visible-xs      { display: none; @include responsive-xs      { display: block; }}
%visible-xxs     { display: none; @include responsive-xxs     { display: block; }}



// PRINT MEDIA QUERIES
%visible-print{
    display: none  !important;
    @media print {
        display: block !important;
    }
}
%hidden-print{
    @media print {
        display: none !important;
    }
}

@function calcPercent($target, $container) {
    @return ($target / $container) * 100%;
}
// new grid system
@mixin mlcol($amount, $gutterWidth: null){
    @if $gutterWidth == null{
        $gutterWidth: calcPercent($defaultPadding * 2, $screen-lg-min);
    } @else if unit($gutterWidth) == 'px'{
        $gutterWidth: calcPercent($gutterWidth, $screen-lg-min);
    }


    $totalGutterWidth: ($amount - 1) * $gutterWidth;
    $totalAvailableWidth: 100% - $totalGutterWidth;
    $actualColWidth: $totalAvailableWidth / $amount;
    @extend %col-abstract;
    margin-right: $gutterWidth;
    width: $actualColWidth;
    &:nth-child(#{$amount}n){
        margin-right: 0;
    }
    &:nth-child(#{$amount}n + 1){
        clear: left;
    }
}
@mixin flexrow($amount, $gutterWidth: null){
    @extend %clearfix;
    display: flex;
    flex-flow: row wrap;
    > *{
        @include mlcol($amount, $gutterWidth);
    }
}